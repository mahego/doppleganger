/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file was auto-generated by Doppleganger.
 * Feel free to modify this file as necessary, but any changes
 * may be lost when it is regenerated.
 */
[assembly: System.Reflection.AssemblyCopyrightAttribute("Copyright c Apache Software Foundation (ASF) 2011")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.601.3")]
[assembly: System.Reflection.AssemblyTitleAttribute("TIBCO Enterprise Message Service .NET API")]
[assembly: System.Runtime.CompilerServices.CompilationRelaxationsAttribute(8)]
[assembly: System.Runtime.CompilerServices.RuntimeCompatibilityAttribute]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Release")]
[assembly: System.Reflection.AssemblyCompanyAttribute("TIBCO Software Inc.")]
[assembly: System.Reflection.AssemblyDescriptionAttribute("This file is a doppleganger of the original assembly.  This assembly only exposes the public API to be used in a testing compilation environment.  TIBCO Enterprise Message Service .NET API")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("6.0.1")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("6.0.1")]
[assembly: System.Reflection.AssemblyTrademarkAttribute("TIB, TIBCO, Information Bus, The Power of Now, TIBCO Adapter, and TIBCO Rendezvous are either registered trademarks or trademarks of TIBCO Software Inc. in the United States and/or other countries.")]
[assembly: System.Reflection.AssemblyProductAttribute("TIBCO EMS")]
namespace TIBCO.EMS
{
   public class Message : System.ICloneable
   {
      public class EmptyEnum : System.Collections.IEnumerator
      {
         public EmptyEnum()
         {
         }
         public System.Object Current
         {
            get { return null; }
         }
         public virtual System.Boolean MoveNext()
         {
            return false;
         }
         public virtual void Reset()
         {
         }
      }
      protected Message()
      {
      }
      public static TIBCO.EMS.Message.EmptyEnum emptyEnum;
      public const System.Int32 DEFAULT_DELIVERY_MODE = 2;
      public const TIBCO.EMS.MessageDeliveryMode DEFAULT_MSG_DELIVERY_MODE = TIBCO.EMS.MessageDeliveryMode.ReliableDelivery;
      public const System.Int32 DEFAULT_PRIORITY = 4;
      public const System.Int64 DEFAULT_TIME_TO_LIVE = 0;
      public System.Boolean IsCompressed
      {
         set { }
      }
      public System.String MessageID
      {
         get { return null; }
         set { }
      }
      public System.Int64 Timestamp
      {
         get { return 0; }
         set { }
      }
      public System.String CorrelationID
      {
         get { return null; }
         set { }
      }
      public System.Byte[] CorrelationIDAsBytes
      {
         get { return null; }
         set { }
      }
      public TIBCO.EMS.Destination Destination
      {
         get { return null; }
         set { }
      }
      public TIBCO.EMS.Destination ReplyTo
      {
         get { return null; }
         set { }
      }
      public System.Int32 DeliveryMode
      {
         get { return 0; }
         set { }
      }
      public TIBCO.EMS.MessageDeliveryMode MsgDeliveryMode
      {
         get { return TIBCO.EMS.MessageDeliveryMode.NonPersistent; }
         set { }
      }
      public System.Boolean Redelivered
      {
         get { return false; }
         set { }
      }
      public System.String MsgType
      {
         get { return null; }
         set { }
      }
      public System.Int64 Expiration
      {
         get { return 0; }
         set { }
      }
      public System.Int32 Priority
      {
         get { return 0; }
         set { }
      }
      public System.Collections.IEnumerator PropertyNames
      {
         get { return null; }
      }
      public virtual System.Object Clone()
      {
         return null;
      }
      public virtual void ClearProperties()
      {
      }
      public virtual System.Boolean PropertyExists(System.String param_name)
      {
         return false;
      }
      public System.Boolean GetBooleanProperty(System.String param_name)
      {
         return false;
      }
      public System.Byte GetByteProperty(System.String param_name)
      {
         return 0;
      }
      public System.Int16 GetShortProperty(System.String param_name)
      {
         return 0;
      }
      public System.Int32 GetIntProperty(System.String param_name)
      {
         return 0;
      }
      public System.Int64 GetLongProperty(System.String param_name)
      {
         return 0;
      }
      public System.Single GetFloatProperty(System.String param_name)
      {
         return 0;
      }
      public System.Double GetDoubleProperty(System.String param_name)
      {
         return 0;
      }
      public System.String GetStringProperty(System.String param_name)
      {
         return null;
      }
      public System.Object GetObjectProperty(System.String param_name)
      {
         return null;
      }
      public virtual System.Object GetProperty(System.String param_name, System.Type param_type)
      {
         return null;
      }
      public void SetBooleanProperty(System.String param_name, System.Boolean param_val)
      {
      }
      public void SetByteProperty(System.String param_name, System.Byte param_val)
      {
      }
      public void SetShortProperty(System.String param_name, System.Int16 param_val)
      {
      }
      public void SetIntProperty(System.String param_name, System.Int32 param_val)
      {
      }
      public void SetLongProperty(System.String param_name, System.Int64 param_val)
      {
      }
      public void SetFloatProperty(System.String param_name, System.Single param_val)
      {
      }
      public void SetDoubleProperty(System.String param_name, System.Double param_val)
      {
      }
      public void SetStringProperty(System.String param_name, System.String param_val)
      {
      }
      public void SetObjectProperty(System.String param_name, System.Object param_val)
      {
      }
      public void SetBytesProperty(System.String param_name, System.Byte[] param_val)
      {
      }
      public virtual void Acknowledge()
      {
      }
      public virtual void ClearBody()
      {
      }
      public static System.String GetDeliveryModeName(TIBCO.EMS.MessageDeliveryMode param_deliveryMode)
      {
         return null;
      }
      public static System.String GetDeliveryModeName(System.Int32 param_deliveryMode)
      {
         return null;
      }
      public static System.String GetTimeName(System.Int64 param_timestamp)
      {
         return null;
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class ObjectMessage : TIBCO.EMS.Message, System.ICloneable
   {
      public ObjectMessage(TIBCO.EMS.Session param_session)
      {
      }
      public ObjectMessage(TIBCO.EMS.Session param_session, System.Object param_obj)
      {
      }
      protected ObjectMessage()
      {
      }
      public System.Object TheObject
      {
         get { return null; }
         set { }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public override void ClearBody()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class EMSException : System.Exception, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public EMSException(System.String param_reason, System.String param_errorCode)
      {
      }
      public EMSException(System.String param_reason)
      {
      }
      public EMSException(System.String param_reason, System.Int32 param_errorNumber)
      {
      }
      protected EMSException()
      {
      }
      public System.String ErrorCode
      {
         get { return null; }
      }
      public System.Exception LinkedException
      {
         get { return null; }
         set { }
      }
   }
   public class ResourceAllocationException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public ResourceAllocationException(System.String param_reason, System.String param_errorCode)
      {
      }
      public ResourceAllocationException(System.String param_reason)
      {
      }
      protected ResourceAllocationException()
      {
      }
   }
   public interface ILookupContext
   {
      System.Collections.Hashtable Settings
      {
         get;
      }
      void AddSettings(System.Collections.Hashtable param_prop);
      System.Object AddSettings(System.String param_propName, System.Object param_propValue);
      System.Object RemoveSettings(System.String param_propName);
      System.Object Lookup(System.String param_name);
   }
   public class LookupContext : TIBCO.EMS.ILookupContext
   {
      public LookupContext()
      {
      }
      public LookupContext(System.Collections.Hashtable param_prop)
      {
      }
      public const System.String PROVIDER_URL = "TIBCO.EMS.provider.url";
      public const System.String SECURITY_PRINCIPAL = "TIBCO.EMS.security.principal";
      public const System.String SECURITY_CREDENTIALS = "TIBCO.EMS.security.credentials";
      public const System.String SECURITY_PROTOCOL = "TIBCO.EMS.naming.security_protocol";
      public const System.String SSL_TRACE = "TIBCO.EMS.naming.ssl_trace";
      public const System.String SSL_TARGET_HOST_NAME = "TIBCO.EMS.naming.ssl_target_host_name";
      public const System.String SSL_AUTH_ONLY = "TIBCO.EMS.naming.ssl_auth_only";
      public const System.String SSL_HOST_NAME_VERIFIER = "TIBCO.EMS.naming.ssl_hostname_verifier";
      public const System.String SSL_STORE_TYPE = "TIBCO.EMS.naming.ssl_store_type";
      public const System.String SSL_STORE_INFO = "TIBCO.EMS.naming.ssl_store_info";
      public const System.String URL_LIST = "TIBCO.EMS.url.list";
      public const System.String URL_SEPARATOR = ",";
      public System.Collections.Hashtable Setttings
      {
         get { return null; }
      }
      public System.Collections.Hashtable Settings
      {
         get { return null; }
      }
      public virtual void AddSettings(System.Collections.Hashtable param_prop)
      {
      }
      public virtual System.Object AddSettings(System.String param_propName, System.Object param_propValue)
      {
         return null;
      }
      public virtual System.Object RemoveSettings(System.String param_propName)
      {
         return null;
      }
      public virtual System.Object Lookup(System.String param_name)
      {
         return null;
      }
   }
   public class InvalidClientIDException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public InvalidClientIDException(System.String param_reason, System.String param_errorCode)
      {
      }
      public InvalidClientIDException(System.String param_reason)
      {
      }
      protected InvalidClientIDException()
      {
      }
   }
   public class Destination : System.ICloneable
   {
      protected Destination()
      {
      }
      public virtual System.Object Clone()
      {
         return null;
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class Queue : TIBCO.EMS.Destination, System.ICloneable
   {
      public Queue(System.String param_name)
      {
      }
      protected Queue()
      {
      }
      public System.String QueueName
      {
         get { return null; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public override System.Boolean Equals(System.Object param_obj)
      {
         return false;
      }
      public override System.Int32 GetHashCode()
      {
         return 0;
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public interface IEMSSerializable
   {
      void Serialize(System.IO.Stream param_stream);
      void Deserialize(System.IO.Stream param_stream);
   }
   public class CFImpl : System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      protected CFImpl()
      {
      }
      public System.String Url
      {
         get { return null; }
      }
      public System.String ClientID
      {
         get { return null; }
      }
      public TIBCO.EMS.FactoryLoadBalanceMetric Metric
      {
         get { return TIBCO.EMS.FactoryLoadBalanceMetric.None; }
         set { }
      }
      public System.Collections.Hashtable Properties
      {
         get { return null; }
      }
      public virtual void GetObjectData(System.Runtime.Serialization.SerializationInfo param_info, System.Runtime.Serialization.StreamingContext param_context)
      {
      }
      public virtual System.Object Clone()
      {
         return null;
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class ConnectionFactory : TIBCO.EMS.CFImpl, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      public ConnectionFactory()
      {
      }
      public ConnectionFactory(System.String param_serverUrl)
      {
      }
      public ConnectionFactory(System.String param_serverUrl, System.String param_clientId)
      {
      }
      public ConnectionFactory(System.String param_serverUrl, System.String param_clientId, System.Collections.Hashtable param_properties)
      {
      }
      public TIBCO.EMS.Connection CreateConnection()
      {
         return null;
      }
      public TIBCO.EMS.Connection CreateConnection(System.String param_userName, System.String param_password)
      {
         return null;
      }
      public override System.Object Clone()
      {
         return null;
      }
      public void SetServerUrl(System.String param_serverUrl)
      {
      }
      public void SetClientID(System.String param_clientID)
      {
      }
      public void SetMetric(System.Int32 param_metric)
      {
      }
      public void SetConnAttemptCount(System.Int32 param_attempts)
      {
      }
      public void SetConnAttemptDelay(System.Int32 param_delay)
      {
      }
      public void SetReconnAttemptCount(System.Int32 param_attempts)
      {
      }
      public void SetReconnAttemptDelay(System.Int32 param_delay)
      {
      }
      public void SetUserName(System.String param_username)
      {
      }
      public void SetUserPassword(System.String param_password)
      {
      }
      public void SetConnAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public void SetReconnAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public void SetMulticastEnabled(System.Boolean param_enabled)
      {
      }
      public void SetMulticastDaemon(System.String param_port)
      {
      }
      public void SetSSLTrace(System.Boolean param_trace)
      {
      }
      public void SetSSLAuthOnly(System.Boolean param_authOnly)
      {
      }
      public void SetTargetHostName(System.String param_targetHostName)
      {
      }
      public void SetCertificateStoreType(TIBCO.EMS.EMSSSLStoreType param_type, System.Object param_storeInfo)
      {
      }
      public System.Object GetCertificateStore()
      {
         return null;
      }
      public void SetHostNameVerifier(TIBCO.EMS.EMSSSLHostNameVerifier param_verifier)
      {
      }
      public void SetClientTracer(System.IO.StreamWriter param_tracer)
      {
      }
      public void SetSSLProxy(System.String param_host, System.Int32 param_port)
      {
      }
      public void SetSSLProxyAuth(System.String param_username, System.String param_password)
      {
      }
      public System.String GetSSLProxyHost()
      {
         return null;
      }
      public System.Int32 GetSSLProxyPort()
      {
         return 0;
      }
      public System.String GetSSLProxyUser()
      {
         return null;
      }
      public System.String GetSSLProxyPassword()
      {
         return null;
      }
   }
   public class TopicConnectionFactory : TIBCO.EMS.ConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      public TopicConnectionFactory()
      {
      }
      public TopicConnectionFactory(System.String param_serverUrl)
      {
      }
      public TopicConnectionFactory(System.String param_serverUrl, System.String param_clientId)
      {
      }
      public TopicConnectionFactory(System.String param_serverUrl, System.String param_clientId, System.Collections.Hashtable param_properties)
      {
      }
      public override System.Object Clone()
      {
         return null;
      }
      public TIBCO.EMS.TopicConnection CreateTopicConnection()
      {
         return null;
      }
      public TIBCO.EMS.TopicConnection CreateTopicConnection(System.String param_userName, System.String param_password)
      {
         return null;
      }
   }
   public class Connection
   {
      protected Connection()
      {
      }
      public System.Boolean IsClosed
      {
         get { return false; }
      }
      public System.Boolean IsSecure
      {
         get { return false; }
      }
      public System.Int64 ConnID
      {
         get { return 0; }
      }
      public System.String ClientID
      {
         get { return null; }
         set { }
      }
      public System.String ActiveURL
      {
         get { return null; }
      }
      public TIBCO.EMS.ConnectionMetaData MetaData
      {
         get { return null; }
      }
      public TIBCO.EMS.IExceptionListener ExceptionListener
      {
         get { return null; }
         set { }
      }
      #pragma warning disable 67
      public event TIBCO.EMS.EMSExceptionHandler ExceptionHandler
      {
         add { }
         remove { }
      }
      public virtual TIBCO.EMS.Session CreateSession(System.Boolean param_transacted, System.Int32 param_acknowledgeMode)
      {
         return null;
      }
      public virtual TIBCO.EMS.Session CreateSession(System.Boolean param_transacted, TIBCO.EMS.SessionMode param_acknowledgeMode)
      {
         return null;
      }
      public virtual void Start()
      {
      }
      public virtual void Stop()
      {
      }
      public virtual void Close()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
      public virtual System.Boolean IsDisconnected()
      {
         return false;
      }
   }
   public class XAConnection : TIBCO.EMS.Connection
   {
      protected XAConnection()
      {
      }
   }
   public class QueueBrowser : System.Collections.IEnumerator
   {
      protected QueueBrowser()
      {
      }
      public System.Object Current
      {
         get { return null; }
      }
      public System.String MessageSelector
      {
         get { return null; }
      }
      public TIBCO.EMS.Queue Queue
      {
         get { return null; }
      }
      public virtual System.Boolean MoveNext()
      {
         return false;
      }
      public virtual void Reset()
      {
      }
      public void Close()
      {
      }
      public System.Collections.IEnumerator GetEnumerator()
      {
         return null;
      }
   }
   public class MessageProducer
   {
      protected MessageProducer()
      {
      }
      public TIBCO.EMS.Destination Destination
      {
         get { return null; }
      }
      public System.Boolean DisableMessageID
      {
         get { return false; }
         set { }
      }
      public System.Boolean DisableMessageTimestamp
      {
         get { return false; }
         set { }
      }
      public System.Int32 DeliveryMode
      {
         get { return 0; }
         set { }
      }
      public TIBCO.EMS.MessageDeliveryMode MsgDeliveryMode
      {
         get { return TIBCO.EMS.MessageDeliveryMode.NonPersistent; }
         set { }
      }
      public System.Int32 Priority
      {
         get { return 0; }
         set { }
      }
      public System.Int64 TimeToLive
      {
         get { return 0; }
         set { }
      }
      public virtual void Send(TIBCO.EMS.Destination param_dest, TIBCO.EMS.Message param_message)
      {
      }
      public virtual void Send(TIBCO.EMS.Destination param_dest, TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public virtual void Send(TIBCO.EMS.Destination param_dest, TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public virtual void Send(TIBCO.EMS.Message param_message)
      {
      }
      public virtual void Send(TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public virtual void Send(TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Close()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class FederatedQueue : TIBCO.EMS.Queue, System.ICloneable
   {
      protected FederatedQueue()
      {
      }
      public System.String Name
      {
         get { return null; }
      }
   }
   public class FederatedTopicConnectionFactory : TIBCO.EMS.TopicConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      protected FederatedTopicConnectionFactory()
      {
      }
      public System.String Name
      {
         get { return null; }
      }
   }
   public class SecurityException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public SecurityException(System.String param_reason, System.String param_errorCode)
      {
      }
      public SecurityException(System.String param_reason)
      {
      }
      protected SecurityException()
      {
      }
   }
   public class QueueConnectionFactory : TIBCO.EMS.ConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      public QueueConnectionFactory()
      {
      }
      public QueueConnectionFactory(System.String param_serverUrl)
      {
      }
      public QueueConnectionFactory(System.String param_serverUrl, System.String param_clientId)
      {
      }
      public QueueConnectionFactory(System.String param_serverUrl, System.String param_clientId, System.Collections.Hashtable param_properties)
      {
      }
      public override System.Object Clone()
      {
         return null;
      }
      public TIBCO.EMS.QueueConnection CreateQueueConnection()
      {
         return null;
      }
      public TIBCO.EMS.QueueConnection CreateQueueConnection(System.String param_userName, System.String param_password)
      {
         return null;
      }
   }
   public class LdapLookupSSLParams
   {
      public LdapLookupSSLParams()
      {
      }
      public void SetSSLQueryClientCertificateCallback(System.DirectoryServices.Protocols.QueryClientCertificateCallback param_cb)
      {
      }
      public void SetSSLVerifyServerCertificateCallback(System.DirectoryServices.Protocols.VerifyServerCertificateCallback param_cb)
      {
      }
   }
   public class ConnectionMetaData
   {
      protected ConnectionMetaData()
      {
      }
      public System.String Version
      {
         get { return null; }
      }
      public System.Int32 MajorVersion
      {
         get { return 0; }
      }
      public System.Int32 MinorVersion
      {
         get { return 0; }
      }
      public System.String ProviderName
      {
         get { return null; }
      }
      public System.String ProviderVersion
      {
         get { return null; }
      }
      public System.Int32 ProviderMajorVersion
      {
         get { return 0; }
      }
      public System.Int32 ProviderMinorVersion
      {
         get { return 0; }
      }
      public System.Collections.IEnumerator JMSXPropertyNames
      {
         get { return null; }
      }
   }
   public class FederatedQueueConnectionFactory : TIBCO.EMS.QueueConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      protected FederatedQueueConnectionFactory()
      {
      }
      public System.String Name
      {
         get { return null; }
      }
   }
   public class StreamMessage : TIBCO.EMS.Message, System.ICloneable
   {
      public StreamMessage(TIBCO.EMS.Session param_session)
      {
      }
      protected StreamMessage()
      {
      }
      public System.Int32 FieldCount
      {
         get { return 0; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public System.Boolean ReadBoolean()
      {
         return false;
      }
      public System.Byte ReadByte()
      {
         return 0;
      }
      public System.Int16 ReadShort()
      {
         return 0;
      }
      public System.Char ReadChar()
      {
         return '\0';
      }
      public System.Int32 ReadInt()
      {
         return 0;
      }
      public System.Int64 ReadLong()
      {
         return 0;
      }
      public System.Single ReadFloat()
      {
         return 0;
      }
      public System.Double ReadDouble()
      {
         return 0;
      }
      public System.String ReadString()
      {
         return null;
      }
      public System.Int32 ReadBytes(System.Byte[] param_value)
      {
         return 0;
      }
      public System.Object ReadObject()
      {
         return null;
      }
      public void WriteBoolean(System.Boolean param_value)
      {
      }
      public void WriteByte(System.Byte param_value)
      {
      }
      public void WriteShort(System.Int16 param_value)
      {
      }
      public void WriteChar(System.Char param_value)
      {
      }
      public void WriteInt(System.Int32 param_value)
      {
      }
      public void WriteLong(System.Int64 param_value)
      {
      }
      public void WriteFloat(System.Single param_value)
      {
      }
      public void WriteDouble(System.Double param_value)
      {
      }
      public void WriteString(System.String param_value)
      {
      }
      public void WriteBytes(System.Byte[] param_value)
      {
      }
      public void WriteBytes(System.Byte[] param_value, System.Int32 param_offset, System.Int32 param_length)
      {
      }
      public void WriteObject(System.Object param_value)
      {
      }
      public void Reset()
      {
      }
      public override void ClearBody()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class MessageNotReadableException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public MessageNotReadableException(System.String param_reason, System.String param_errorCode)
      {
      }
      public MessageNotReadableException(System.String param_reason)
      {
      }
      protected MessageNotReadableException()
      {
      }
   }
   public class EMSSSLSystemStoreInfo
   {
      public EMSSSLSystemStoreInfo()
      {
      }
      public void SetCertificateStoreName(System.String param_storeName)
      {
      }
      public void SetCertificateStoreLocation(System.Security.Cryptography.X509Certificates.StoreLocation param_storeLocation)
      {
      }
      public void SetCertificateName(System.String param_certName)
      {
      }
      public void SetCertificateNameAsFullSubjectDN(System.String param_certName)
      {
      }
   }
   public class LookupContextFactory
   {
      public LookupContextFactory()
      {
      }
      public const System.String LDAP_CONTEXT = "ldap";
      public const System.String TIBJMS_NAMING_CONTEXT = "tibjmsnaming";
      public TIBCO.EMS.ILookupContext CreateContext(System.String param_name, System.Collections.Hashtable param_props)
      {
         return null;
      }
   }
   public class InvalidSelectorException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public InvalidSelectorException(System.String param_reason, System.String param_errorCode)
      {
      }
      public InvalidSelectorException(System.String param_reason)
      {
      }
      protected InvalidSelectorException()
      {
      }
   }
   public class MessageFormatException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public MessageFormatException(System.String param_reason, System.String param_errorCode)
      {
      }
      public MessageFormatException(System.String param_reason)
      {
      }
      protected MessageFormatException()
      {
      }
   }
   public interface IExceptionListener
   {
      void OnException(TIBCO.EMS.EMSException param_exception);
   }
   public class LdapLookupContext : TIBCO.EMS.ILookupContext
   {
      protected LdapLookupContext()
      {
      }
      public System.Collections.Hashtable Settings
      {
         get { return null; }
      }
      public virtual void AddSettings(System.Collections.Hashtable param_prop)
      {
      }
      public virtual System.Object AddSettings(System.String param_propName, System.Object param_propValue)
      {
         return null;
      }
      public virtual System.Object RemoveSettings(System.String param_propName)
      {
         return null;
      }
      public virtual System.Object Lookup(System.String param_name)
      {
         return null;
      }
   }
   public class TransactionInProgressException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public TransactionInProgressException(System.String param_reason, System.String param_errorCode)
      {
      }
      public TransactionInProgressException(System.String param_reason)
      {
      }
      protected TransactionInProgressException()
      {
      }
   }
   public class MapMessage : TIBCO.EMS.Message, System.ICloneable
   {
      public MapMessage(TIBCO.EMS.Session param_session)
      {
      }
      protected MapMessage()
      {
      }
      public System.Int32 FieldCount
      {
         get { return 0; }
      }
      public System.Collections.IEnumerator MapNames
      {
         get { return null; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public System.Boolean GetBoolean(System.String param_name)
      {
         return false;
      }
      public System.Byte GetByte(System.String param_name)
      {
         return 0;
      }
      public System.Int16 GetShort(System.String param_name)
      {
         return 0;
      }
      public System.Char GetChar(System.String param_name)
      {
         return '\0';
      }
      public System.Int32 GetInt(System.String param_name)
      {
         return 0;
      }
      public System.Int64 GetLong(System.String param_name)
      {
         return 0;
      }
      public System.Single GetFloat(System.String param_name)
      {
         return 0;
      }
      public System.Double GetDouble(System.String param_name)
      {
         return 0;
      }
      public System.String GetString(System.String param_name)
      {
         return null;
      }
      public System.Byte[] GetBytes(System.String param_name)
      {
         return null;
      }
      public System.Object GetObject(System.String param_name)
      {
         return null;
      }
      public System.Collections.ICollection GetMapNames()
      {
         return null;
      }
      public void SetBoolean(System.String param_name, System.Boolean param_value)
      {
      }
      public void SetByte(System.String param_name, System.Byte param_value)
      {
      }
      public void SetShort(System.String param_name, System.Int16 param_value)
      {
      }
      public void SetChar(System.String param_name, System.Char param_value)
      {
      }
      public void SetInt(System.String param_name, System.Int32 param_value)
      {
      }
      public void SetLong(System.String param_name, System.Int64 param_value)
      {
      }
      public void SetFloat(System.String param_name, System.Single param_value)
      {
      }
      public void SetDouble(System.String param_name, System.Double param_value)
      {
      }
      public void SetString(System.String param_name, System.String param_value)
      {
      }
      public void SetBytes(System.String param_name, System.Byte[] param_value)
      {
      }
      public void SetBytes(System.String param_name, System.Byte[] param_value, System.Int32 param_offset, System.Int32 param_length)
      {
      }
      public void SetObject(System.String param_name, System.Object param_value)
      {
      }
      public System.Boolean ItemExists(System.String param_name)
      {
         return false;
      }
      public override void ClearBody()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public enum EMSSSLStoreType
   {
      EMSSSL_STORE_TYPE_FILE
      , EMSSSL_STORE_TYPE_SYSTEM
      , EMSSSL_STORE_TYPE_DEFAULT
   }
   public class TemporaryQueue : TIBCO.EMS.Queue, System.ICloneable
   {
      protected TemporaryQueue()
      {
      }
      public System.Boolean IsClosed
      {
         get { return false; }
      }
      public System.Int32 RefCount
      {
         get { return 0; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public void Delete()
      {
      }
      public virtual void _AddRefCount()
      {
      }
      public virtual void _SubtractRefCount()
      {
      }
   }
   public class NamingException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public NamingException(System.String param_reason)
      {
      }
      protected NamingException()
      {
      }
      public System.Exception RootCause
      {
         get { return null; }
         set { }
      }
   }
   public class CommunicationException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public CommunicationException(System.String param_reason)
      {
      }
      protected CommunicationException()
      {
      }
   }
   public class ConfigurationException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public ConfigurationException(System.String param_reason)
      {
      }
      protected ConfigurationException()
      {
      }
   }
   public class CannotProceedException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public CannotProceedException(System.String param_reason)
      {
      }
      protected CannotProceedException()
      {
      }
   }
   public class NameNotFoundException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public NameNotFoundException(System.String param_reason)
      {
      }
      protected NameNotFoundException()
      {
      }
   }
   public class ServiceUnavailableException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public ServiceUnavailableException(System.String param_reason)
      {
      }
      protected ServiceUnavailableException()
      {
      }
   }
   public class InvalidNameException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public InvalidNameException(System.String param_reason)
      {
      }
      protected InvalidNameException()
      {
      }
   }
   public class AuthenticationException : TIBCO.EMS.NamingException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public AuthenticationException(System.String param_reason)
      {
      }
      protected AuthenticationException()
      {
      }
   }
   public class TopicPublisher : TIBCO.EMS.MessageProducer
   {
      protected TopicPublisher()
      {
      }
      public TIBCO.EMS.Topic Topic
      {
         get { return null; }
      }
      public void Publish(TIBCO.EMS.Message param_message)
      {
      }
      public void Publish(TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Publish(TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Publish(TIBCO.EMS.Topic param_topic, TIBCO.EMS.Message param_message)
      {
      }
      public void Publish(TIBCO.EMS.Topic param_topic, TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Publish(TIBCO.EMS.Topic param_topic, TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
   }
   public class EMSSSLFileStoreInfo
   {
      public EMSSSLFileStoreInfo()
      {
      }
      public void SetSSLClientIdentity(System.String param_clientIdentity)
      {
      }
      public void SetSSLPassword(System.Char[] param_password)
      {
      }
      public void SetSSLClientIdentity(System.Security.Cryptography.X509Certificates.X509Certificate param_cert)
      {
      }
      public void SetSSLTrustedCertificate(System.String param_certificate)
      {
      }
      public void SetSSLTrustedCertificate(System.Security.Cryptography.X509Certificates.X509Certificate param_cert)
      {
      }
      public void ClearTrustedCerts()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class QueueConnection : TIBCO.EMS.Connection
   {
      protected QueueConnection()
      {
      }
      public virtual TIBCO.EMS.QueueSession CreateQueueSession(System.Boolean param_transacted, System.Int32 param_acknowledgeMode)
      {
         return null;
      }
      public virtual TIBCO.EMS.QueueSession CreateQueueSession(System.Boolean param_transacted, TIBCO.EMS.SessionMode param_acknowledgeMode)
      {
         return null;
      }
   }
   public class LdapLookupConsts
   {
      protected LdapLookupConsts()
      {
      }
      public const System.String LDAP_SERVER_URL = "TIBCO.EMS.ldap_server_url";
      public const System.String LDAP_BASE_DN = "TIBCO.EMS.ldap_base_dn";
      public const System.String LDAP_PRINCIPAL = "TIBCO.EMS.ldap_principal";
      public const System.String LDAP_CREDENTIAL = "TIBCO.EMS.ldap_credential";
      public const System.String LDAP_SEARCH_SCOPE = "TIBCO.EMS.ldap_search_scope";
      public const System.String LDAP_CONN_TYPE = "TIBCO.EMS.ldap_conn_type";
      public const System.String LDAP_CERT_NAME = "TIBCO.EMS.ldap_cert_name";
      public const System.String LDAP_CERT_STORE_NAME = "TIBCO.EMS.ldap_cert_store_name";
      public const System.String LDAP_CERT_STORE_LOCATION = "TIBCO.EMS.ldap_cert_store_location";
      public const System.String LDAP_SSL_PARAMS = "TIBCO.EMS.ldap_ssl_params";
      public const System.String LDAP_AUTH_TYPE = "TIBCO.EMS.ldap_auth_type";
      public const System.String LDAP_PROTOCOL_VERSION = "TIBCO.EMS.ldap_protocol_version";
   }
   public class EMSSSL
   {
      public EMSSSL()
      {
      }
      public const System.String TRACE = "TIBCO.EMS.ssl.trace";
      public const System.String CLIENT_TRACER = "TIBCO.EMS.ssl.client_tracer";
      public const System.String AUTH_ONLY = "TIBCO.EMS.ssl.auth_only";
      public const System.String TRUSTED_CERTIFICATES = "TIBCO.EMS.ssl.trusted_certs";
      public const System.String TARGET_HOST_NAME = "TIBCO.EMS.ssl.target_host_name";
      public const System.String HOST_NAME_VERIFIER = "TIBCO.EMS.ssl.hostname_verifier";
      public const System.String IDENTITY = "TIBCO.EMS.ssl.identity";
      public const System.String PASSWORD = "TIBCO.EMS.ssl.password";
      public const System.String CERT_NAME = "TIBCO.EMS.ssl.cert_name";
      public const System.String STORE_TYPE = "TIBCO.EMS.ssl.store_type";
      public const System.String STORE_INFO = "TIBCO.EMS.ssl.store_info";
      public const System.Int32 ENCODING_AUTO = 0;
      public const System.Int32 ENCODING_PEM = 1;
      public const System.Int32 ENCODING_DER = 2;
      public const System.Int32 ENCODING_PKCS7 = 16;
      public const System.Int32 ENCODING_PKCS8 = 32;
      public const System.Int32 ENCODING_PKCS12 = 64;
      public const System.Int32 ENCODING_PFX = 256;
      public static void Initialize()
      {
      }
      public static void SetAuthOnly(System.Boolean param_b)
      {
      }
      public static System.Boolean GetAuthOnly()
      {
         return false;
      }
      public static void SetClientTracer(System.IO.StreamWriter param_tracer)
      {
      }
      public static System.IO.StreamWriter GetClientTracer()
      {
         return null;
      }
      public static void SetTargetHostName(System.String param_hostname)
      {
      }
      public static System.String GetTargetHostName()
      {
         return null;
      }
      public static void SetHostNameVerifier(TIBCO.EMS.EMSSSLHostNameVerifier param_verifier)
      {
      }
      public static TIBCO.EMS.EMSSSLHostNameVerifier GetHostNameVerifier()
      {
         return null;
      }
      public static void SetCertificateStoreType(TIBCO.EMS.EMSSSLStoreType param_type, System.Object param_storeInfo)
      {
      }
   }
   public class Session
   {
      protected Session()
      {
      }
      public const System.Int32 SESSION_TRANSACTED = 0;
      public const System.Int32 AUTO_ACKNOWLEDGE = 1;
      public const System.Int32 CLIENT_ACKNOWLEDGE = 2;
      public const System.Int32 DUPS_OK_ACKNOWLEDGE = 3;
      public const System.Int32 NO_ACKNOWLEDGE = 22;
      public const System.Int32 EXPLICIT_CLIENT_ACKNOWLEDGE = 23;
      public const System.Int32 EXPLICIT_CLIENT_DUPS_OK_ACKNOWLEDGE = 24;
      public TIBCO.EMS.Connection Connection
      {
         get { return null; }
      }
      public System.Boolean IsClosed
      {
         get { return false; }
      }
      public System.Int64 SessID
      {
         get { return 0; }
      }
      public System.Boolean IsTransacted
      {
         get { return false; }
      }
      public System.Int32 AcknowledgeMode
      {
         get { return 0; }
      }
      public TIBCO.EMS.SessionMode SessionAcknowledgeMode
      {
         get { return TIBCO.EMS.SessionMode.SessionTransacted; }
      }
      public System.Boolean Transacted
      {
         get { return false; }
      }
      public TIBCO.EMS.IMessageListener MessageListener
      {
         get { return null; }
         set { }
      }
      public TIBCO.EMS.QueueBrowser CreateBrowser(TIBCO.EMS.Queue param_queue)
      {
         return null;
      }
      public TIBCO.EMS.QueueBrowser CreateBrowser(TIBCO.EMS.Queue param_queue, System.String param_messageSelector)
      {
         return null;
      }
      public TIBCO.EMS.MessageConsumer CreateConsumer(TIBCO.EMS.Destination param_dest)
      {
         return null;
      }
      public TIBCO.EMS.MessageConsumer CreateConsumer(TIBCO.EMS.Destination param_dest, System.String param_messageSelector)
      {
         return null;
      }
      public TIBCO.EMS.MessageConsumer CreateConsumer(TIBCO.EMS.Destination param_dest, System.String param_messageSelector, System.Boolean param_noLocal)
      {
         return null;
      }
      public TIBCO.EMS.TemporaryTopic CreateTemporaryTopic()
      {
         return null;
      }
      public TIBCO.EMS.TemporaryQueue CreateTemporaryQueue()
      {
         return null;
      }
      public TIBCO.EMS.TopicSubscriber CreateDurableSubscriber(TIBCO.EMS.Topic param_topic, System.String param_name)
      {
         return null;
      }
      public TIBCO.EMS.TopicSubscriber CreateDurableSubscriber(TIBCO.EMS.Topic param_topic, System.String param_name, System.String param_messageSelector, System.Boolean param_noLocal)
      {
         return null;
      }
      public TIBCO.EMS.Topic CreateTopic(System.String param_topicName)
      {
         return null;
      }
      public TIBCO.EMS.Queue CreateQueue(System.String param_queueName)
      {
         return null;
      }
      public TIBCO.EMS.MessageProducer CreateProducer(TIBCO.EMS.Destination param_dest)
      {
         return null;
      }
      public void Unsubscribe(System.String param_name)
      {
      }
      public TIBCO.EMS.BytesMessage CreateBytesMessage()
      {
         return null;
      }
      public TIBCO.EMS.MapMessage CreateMapMessage()
      {
         return null;
      }
      public TIBCO.EMS.Message CreateMessage()
      {
         return null;
      }
      public TIBCO.EMS.ObjectMessage CreateObjectMessage()
      {
         return null;
      }
      public TIBCO.EMS.ObjectMessage CreateObjectMessage(System.Object param_obj)
      {
         return null;
      }
      public TIBCO.EMS.StreamMessage CreateStreamMessage()
      {
         return null;
      }
      public TIBCO.EMS.TextMessage CreateTextMessage()
      {
         return null;
      }
      public TIBCO.EMS.TextMessage CreateTextMessage(System.String param_text)
      {
         return null;
      }
      public virtual void Commit()
      {
      }
      public virtual void Rollback()
      {
      }
      public void Close()
      {
      }
      public void Recover()
      {
      }
      public void Run()
      {
      }
   }
   public class XASession : TIBCO.EMS.Session
   {
      protected XASession()
      {
      }
   }
   public class Topic : TIBCO.EMS.Destination, System.ICloneable
   {
      public Topic(System.String param_name)
      {
      }
      protected Topic()
      {
      }
      public System.String TopicName
      {
         get { return null; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public override System.Boolean Equals(System.Object param_obj)
      {
         return false;
      }
      public override System.Int32 GetHashCode()
      {
         return 0;
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class FederatedTopic : TIBCO.EMS.Topic, System.ICloneable
   {
      protected FederatedTopic()
      {
      }
      public System.String Name
      {
         get { return null; }
      }
   }
   public class MessageNotWriteableException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public MessageNotWriteableException(System.String param_reason, System.String param_errorCode)
      {
      }
      public MessageNotWriteableException(System.String param_reason)
      {
      }
      protected MessageNotWriteableException()
      {
      }
   }
   public class QueueSender : TIBCO.EMS.MessageProducer
   {
      protected QueueSender()
      {
      }
      public TIBCO.EMS.Queue Queue
      {
         get { return null; }
      }
      public override void Send(TIBCO.EMS.Message param_message)
      {
      }
      public override void Send(TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public override void Send(TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Send(TIBCO.EMS.Queue param_queue, TIBCO.EMS.Message param_message)
      {
      }
      public void Send(TIBCO.EMS.Queue param_queue, TIBCO.EMS.Message param_message, System.Int32 param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
      public void Send(TIBCO.EMS.Queue param_queue, TIBCO.EMS.Message param_message, TIBCO.EMS.MessageDeliveryMode param_deliveryMode, System.Int32 param_priority, System.Int64 param_timeToLive)
      {
      }
   }
   public class XAConnectionFactory : TIBCO.EMS.CFImpl, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      protected XAConnectionFactory()
      {
      }
      public void SetServerUrl(System.String param_serverUrl)
      {
      }
      public void SetClientID(System.String param_clientID)
      {
      }
      public void SetMetric(System.Int32 param_metric)
      {
      }
      public void SetConnAttemptCount(System.Int32 param_attempts)
      {
      }
      public void SetConnAttemptDelay(System.Int32 param_delay)
      {
      }
      public void SetReconnAttemptCount(System.Int32 param_attempts)
      {
      }
      public void SetReconnAttemptDelay(System.Int32 param_delay)
      {
      }
      public void SetUserName(System.String param_username)
      {
      }
      public void SetUserPassword(System.String param_password)
      {
      }
      public void SetConnAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public void SetReconnAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public void SetMulticastEnabled(System.Boolean param_enabled)
      {
      }
      public void SetMulticastDaemon(System.String param_port)
      {
      }
      public void SetSSLTrace(System.Boolean param_trace)
      {
      }
      public void SetSSLAuthOnly(System.Boolean param_authOnly)
      {
      }
      public void SetTargetHostName(System.String param_targetHostName)
      {
      }
      public void SetCertificateStoreType(TIBCO.EMS.EMSSSLStoreType param_type, System.Object param_storeInfo)
      {
      }
      public System.Object GetCertificateStore()
      {
         return null;
      }
      public void SetHostNameVerifier(TIBCO.EMS.EMSSSLHostNameVerifier param_verifier)
      {
      }
      public void SetClientTracer(System.IO.StreamWriter param_tracer)
      {
      }
      public void SetSSLProxy(System.String param_host, System.Int32 param_port)
      {
      }
      public void SetSSLProxyAuth(System.String param_username, System.String param_password)
      {
      }
      public System.String GetSSLProxyHost()
      {
         return null;
      }
      public System.Int32 GetSSLProxyPort()
      {
         return 0;
      }
      public System.String GetSSLProxyUser()
      {
         return null;
      }
      public System.String GetSSLProxyPassword()
      {
         return null;
      }
      public TIBCO.EMS.Connection CreateConnection()
      {
         return null;
      }
      public TIBCO.EMS.Connection CreateConnection(System.String param_userName, System.String param_password)
      {
         return null;
      }
      public override System.Object Clone()
      {
         return null;
      }
   }
   public class EMSDTCConnectionFactory : TIBCO.EMS.XAConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      public EMSDTCConnectionFactory()
      {
      }
      public EMSDTCConnectionFactory(System.String param_serverUrl)
      {
      }
      public EMSDTCConnectionFactory(System.String param_serverUrl, System.String param_clientId)
      {
      }
      public EMSDTCConnectionFactory(System.String param_serverUrl, System.String param_clientId, System.Collections.Hashtable param_properties)
      {
      }
      public TIBCO.EMS.EMSDTCConnection CreateEMSDTCConnection()
      {
         return null;
      }
      public TIBCO.EMS.EMSDTCConnection CreateEMSDTCConnection(System.String param_userName, System.String param_password)
      {
         return null;
      }
      public override System.Object Clone()
      {
         return null;
      }
   }
   public class TransactionRolledBackException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public TransactionRolledBackException(System.String param_reason, System.String param_errorCode)
      {
      }
      public TransactionRolledBackException(System.String param_reason)
      {
      }
      protected TransactionRolledBackException()
      {
      }
   }
   public class TextMessage : TIBCO.EMS.Message, System.ICloneable
   {
      public TextMessage(TIBCO.EMS.Session param_session)
      {
      }
      public TextMessage(TIBCO.EMS.Session param_session, System.String param_text)
      {
      }
      protected TextMessage()
      {
      }
      public System.String Text
      {
         get { return null; }
         set { }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public override void ClearBody()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class FederatedConnectionFactory : TIBCO.EMS.ConnectionFactory, System.Runtime.Serialization.ISerializable, System.ICloneable
   {
      protected FederatedConnectionFactory()
      {
      }
      public System.String Name
      {
         get { return null; }
      }
   }
   public class EMSDTCConnection : TIBCO.EMS.XAConnection
   {
      protected EMSDTCConnection()
      {
      }
      public TIBCO.EMS.EMSDTCSession CreateEMSDTCSession()
      {
         return null;
      }
   }
   public class EMSExceptionEventArgs : System.EventArgs
   {
      public EMSExceptionEventArgs(TIBCO.EMS.EMSException param_emse)
      {
      }
      protected EMSExceptionEventArgs()
      {
      }
      public TIBCO.EMS.EMSException Exception
      {
         get { return null; }
      }
   }
   public delegate void EMSExceptionHandler(System.Object param_sender, TIBCO.EMS.EMSExceptionEventArgs param_args);
   public delegate void EMSMessageHandler(System.Object param_sender, TIBCO.EMS.EMSMessageEventArgs param_args);
   public class EMSMessageEventArgs : System.EventArgs
   {
      public EMSMessageEventArgs(TIBCO.EMS.Message param_msg)
      {
      }
      protected EMSMessageEventArgs()
      {
      }
      public TIBCO.EMS.Message Message
      {
         get { return null; }
      }
   }
   public class DPQMember
   {
      protected DPQMember()
      {
      }
   }
   public class MessageConsumer : TIBCO.EMS.DPQMember
   {
      protected MessageConsumer()
      {
      }
      public System.String MessageSelector
      {
         get { return null; }
      }
      public TIBCO.EMS.IMessageListener MessageListener
      {
         get { return null; }
         set { }
      }
      #pragma warning disable 67
      public event TIBCO.EMS.EMSMessageHandler MessageHandler
      {
         add { }
         remove { }
      }
      public TIBCO.EMS.Message Receive()
      {
         return null;
      }
      public TIBCO.EMS.Message Receive(System.Int64 param_timeout)
      {
         return null;
      }
      public TIBCO.EMS.Message ReceiveNoWait()
      {
         return null;
      }
      public void Close()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public delegate System.Boolean EMSSSLHostNameVerifier(System.Object param_sender, TIBCO.EMS.EMSSSLHostNameVerifierArgs param_args);
   public class EMSSSLHostNameVerifierArgs : System.EventArgs
   {
      public EMSSSLHostNameVerifierArgs(System.String param_connectedHostName, System.String param_targetHostName, System.String param_certificateCommonName, System.Security.Cryptography.X509Certificates.X509Certificate param_serverCertificate, System.Security.Cryptography.X509Certificates.X509Chain param_chain)
      {
      }
      protected EMSSSLHostNameVerifierArgs()
      {
      }
      public System.String m_connectedHostName;
      public System.String m_targetHostName;
      public System.String m_certificateCommonName;
      public System.Security.Cryptography.X509Certificates.X509Certificate m_serverCertificate;
      public System.Security.Cryptography.X509Certificates.X509Chain m_x509Chain;
   }
   public class TopicSubscriber : TIBCO.EMS.MessageConsumer
   {
      protected TopicSubscriber()
      {
      }
      public TIBCO.EMS.Topic Topic
      {
         get { return null; }
      }
      public System.Boolean NoLocal
      {
         get { return false; }
      }
   }
   public interface IMessageListener
   {
      void OnMessage(TIBCO.EMS.Message param_message);
   }
   public class InvalidDestinationException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public InvalidDestinationException(System.String param_reason, System.String param_errorCode)
      {
      }
      public InvalidDestinationException(System.String param_reason)
      {
      }
      protected InvalidDestinationException()
      {
      }
   }
   public class TemporaryTopic : TIBCO.EMS.Topic, System.ICloneable
   {
      protected TemporaryTopic()
      {
      }
      public System.Boolean IsClosed
      {
         get { return false; }
      }
      public System.Int32 RefCount
      {
         get { return 0; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public void Delete()
      {
      }
      public virtual void _AddRefCount()
      {
      }
      public virtual void _SubtractRefCount()
      {
      }
   }
   public class TopicSession : TIBCO.EMS.Session
   {
      protected TopicSession()
      {
      }
      public TIBCO.EMS.TopicSubscriber CreateSubscriber(TIBCO.EMS.Topic param_topic)
      {
         return null;
      }
      public TIBCO.EMS.TopicSubscriber CreateSubscriber(TIBCO.EMS.Topic param_topic, System.String param_messageSelector, System.Boolean param_noLocal)
      {
         return null;
      }
      public TIBCO.EMS.TopicPublisher CreatePublisher(TIBCO.EMS.Topic param_topic)
      {
         return null;
      }
   }
   public class EMSDTCSession : TIBCO.EMS.XASession
   {
      protected EMSDTCSession()
      {
      }
      public TIBCO.EMS.Session GetSession()
      {
         return null;
      }
      public override void Commit()
      {
      }
      public override void Rollback()
      {
      }
   }
   public enum SessionMode
   {
      SessionTransacted
      , AutoAcknowledge
      , ClientAcknowledge
      , DupsOkAcknowledge
      , NoAcknowledge
      , ExplicitClientAcknowledge
      , ExplicitClientDupsOkAcknowledge
   }
   public enum FactoryLoadBalanceMetric
   {
      None
      , Connections
      , ByteRate
   }
   public enum MessageDeliveryMode
   {
      NonPersistent
      , Persistent
      , ReliableDelivery
   }
   public class DeliveryMode
   {
      protected DeliveryMode()
      {
      }
      public const System.Int32 NON_PERSISTENT = 1;
      public const System.Int32 PERSISTENT = 2;
      public const System.Int32 RELIABLE_DELIVERY = 22;
   }
   public class Tibems
   {
      protected Tibems()
      {
      }
      public const System.Int32 NPSEND_CHECK_DEFAULT = 0;
      public const System.Int32 NPSEND_CHECK_ALWAYS = 1;
      public const System.Int32 NPSEND_CHECK_NEVER = 2;
      public const System.Int32 NPSEND_CHECK_TEMP_DEST = 3;
      public const System.Int32 NPSEND_CHECK_AUTH = 4;
      public const System.Int32 NPSEND_CHECK_TEMP_AUTH = 5;
      public const System.String JMS_TIBCO_IMPORTED = "JMS_TIBCO_IMPORTED";
      public const System.String JMS_TIBCO_SENDER = "JMS_TIBCO_SENDER";
      public const System.String JMS_TIBCO_DISABLE_SENDER = "JMS_TIBCO_DISABLE_SENDER";
      public const System.String JMS_TIBCO_SS_SENDER = "JMS_TIBCO_SS_SENDER";
      public const System.String JMS_TIBCO_CM_PUBLISHER = "JMS_TIBCO_CM_PUBLISHER";
      public const System.String JMS_TIBCO_CM_SEQUENCE = "JMS_TIBCO_CM_SEQUENCE";
      public const System.String JMS_TIBCO_MSG_EXT = "JMS_TIBCO_MSG_EXT";
      public const System.String JMS_TIBCO_MSG_TRACE = "JMS_TIBCO_MSG_TRACE";
      public const System.String JMS_TIBCO_COMPRESS = "JMS_TIBCO_COMPRESS";
      public const System.String JMS_TIBCO_PRESERVE_UNDELIVERED = "JMS_TIBCO_PRESERVE_UNDELIVERED";
      public const System.String PROP_MESSAGE_ENCODING = "tibco.tibjms.message.encoding";
      public const System.String PROP_SOCKET_RECEIVE = "tibco.tibjms.socket.receive";
      public const System.String PROP_SOCKET_SEND = "tibco.tibjms.socket.send";
      public const System.String PROP_DAEMON_DISPATCHER = "tibco.tibjms.daemon.dispatcher";
      public const System.String PROP_FT_SWITCH_EXCEPTION = "tibco.tibjms.ft.switch.exception";
      public const System.String PROP_FT_EVENTS_EXCEPTION = "tibco.tibjms.ft.events.exception";
      public const System.String PROP_CLOSE_IN_CALLBACK = "tibco.tibjms.close.in.callback";
      public const System.String PROP_CONNECT_ATTEMPTS = "tibco.tibjms.connect.attempts";
      public const System.String PROP_RECONNECT_ATTEMPTS = "tibco.tibjms.reconnect.attempts";
      public const System.String PROP_CONNECT_ATTEMPT_TIMEOUT = "tibco.tibjms.connect.attempt.timeout";
      public const System.String PROP_RECONNECT_ATTEMPT_TIMEOUT = "tibco.tibjms.reconnect.attempt.timeout";
      public const System.String PROP_MULTICAST_ENABLED = "tibco.tibjms.multicast.enabled";
      public const System.String PROP_MULTICAST_DAEMON = "tibco.tibjms.multicast.daemon";
      public const System.String PROP_PING_INTERVAL = "tibco.tibjms.ping.interval";
      public const System.String DEFAULT_FACTORY_USERNAME = "TIBCO.EMS.factory.username";
      public const System.String DEFAULT_FACTORY_PASSWORD = "TIBCO.EMS.factory.password";
      public const System.String FACTORY_LOAD_BALANCE_METRIC = "TIBCO.EMS.factory.metric";
      public const System.Int32 FACTORY_LOAD_BALANCE_METRIC_NONE = 0;
      public const System.Int32 FACTORY_LOAD_BALANCE_METRIC_CONNECTIONS = 1;
      public const System.Int32 FACTORY_LOAD_BALANCE_METRIC_BYTE_RATE = 2;
      public const System.String FACTORY_CONNECT_ATTEMPT_COUNT = "TIBCO.EMS.connect.attemptcount";
      public const System.String FACTORY_CONNECT_ATTEMPT_DELAY = "TIBCO.EMS.connect.attemptdelay";
      public const System.String FACTORY_RECONNECT_ATTEMPT_COUNT = "TIBCO.EMS.reconnect.attemptcount";
      public const System.String FACTORY_RECONNECT_ATTEMPT_DELAY = "TIBCO.EMS.reconnect.attemptdelay";
      public const System.String FACTORY_CONNECT_ATTEMPT_TIMEOUT = "TIBCO.EMS.connect.attempttimeout";
      public const System.String FACTORY_RECONNECT_ATTEMPT_TIMEOUT = "TIBCO.EMS.reconnect.attempttimeout";
      public const System.String FACTORY_MULTICAST_ENABLED = "TIBCO.EMS.multicast.enabled";
      public const System.String FACTORY_MULTICAST_DAEMON = "TIBCO.EMS.multicast.daemon";
      #pragma warning disable 67
      public event TIBCO.EMS.EMSMulticastExceptionHandler MulticastExceptionHandler
      {
         add { }
         remove { }
      }
      public static System.Int32 GetMessageSize(TIBCO.EMS.Message param_msg)
      {
         return 0;
      }
      public static System.Int32 GetMessageHeadersSize(TIBCO.EMS.Message param_msg)
      {
         return 0;
      }
      public static System.Int32 GetMessagePropertiesSize(TIBCO.EMS.Message param_msg)
      {
         return 0;
      }
      public static System.Int32 GetMessageBodySize(TIBCO.EMS.Message param_msg)
      {
         return 0;
      }
      public static System.Int32 CalculateMessageSize(TIBCO.EMS.Message param_msg)
      {
         return 0;
      }
      public static void SetAllowCloseInCallback(System.Boolean param_allow)
      {
      }
      public static void SetAllowCallbackInClose(System.Boolean param_allow)
      {
      }
      public static System.Boolean GetAllowCloseInCallback()
      {
         return false;
      }
      public static System.Boolean GetAllowCallbackInClose()
      {
         return false;
      }
      public static void SetExceptionOnFTSwitch(System.Boolean param_callExceptionListener)
      {
      }
      public static System.Boolean GetExceptionOnFTSwitch()
      {
         return false;
      }
      public static void SetExceptionOnFTEvents(System.Boolean param_callExceptionListener)
      {
      }
      public static System.Boolean GetExceptionOnFTEvents()
      {
         return false;
      }
      public static void SetSessionDispatcherDaemon(System.Boolean param_makeDaemon)
      {
      }
      public static System.Boolean GetSessionDispatcherDaemon()
      {
         return false;
      }
      public static void SetConnectAttempts(System.String param_specs)
      {
      }
      public static System.String GetConnectAttempts()
      {
         return null;
      }
      public static void SetConnectAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public static System.Int32 GetConnectAttemptTimeout()
      {
         return 0;
      }
      public static void SetReconnectAttemptTimeout(System.Int32 param_timeout)
      {
      }
      public static System.Int32 GetReconnectAttemptTimeout()
      {
         return 0;
      }
      public static void SetReconnectAttempts(System.String param_specs)
      {
      }
      public static System.String GetReconnectAttempts()
      {
         return null;
      }
      public static void SetSocketReceiveBufferSize(System.Int32 param_size)
      {
      }
      public static System.Int32 GetSocketReceiveBufferSize()
      {
         return 0;
      }
      public static void SetSocketSendBufferSize(System.Int32 param_size)
      {
      }
      public static System.Int32 GetSocketSendBufferSize()
      {
         return 0;
      }
      public static void SetPingInterval(System.Int32 param_seconds)
      {
      }
      public static System.Int32 GetPingInterval()
      {
         return 0;
      }
      public static System.Object GetProperty(System.String param_key)
      {
         return null;
      }
      public static void SetProperty(System.String param_key, System.Object param_val)
      {
      }
      public static void SetEncoding(System.String param_encodingName)
      {
      }
      public static System.String GetEncoding()
      {
         return null;
      }
      public static void SetMessageEncoding(TIBCO.EMS.Message param_message, System.String param_encodingName)
      {
      }
      public static System.String GetMessageEncoding(TIBCO.EMS.Message param_message)
      {
         return null;
      }
      public static System.Byte[] GetAsBytes(TIBCO.EMS.Message param_message)
      {
         return null;
      }
      public static TIBCO.EMS.Message CreateFromBytes(System.Byte[] param_bytes)
      {
         return null;
      }
      public static void MakeWriteable(TIBCO.EMS.Message param_message)
      {
      }
      public static System.String GetConnectionActiveURL(TIBCO.EMS.Connection param_connection)
      {
         return null;
      }
      public static void SetNPSendCheckMode(TIBCO.EMS.MessageProducer param_producer, System.Int32 param_mode)
      {
      }
      public static System.Int32 GetNPSendCheckMode(TIBCO.EMS.MessageProducer param_producer)
      {
         return 0;
      }
      public static void SetTraceFile(System.String param_fileName)
      {
      }
      public static void SetMulticastEnabled(System.Boolean param_enabled)
      {
      }
      public static System.Boolean GetMulticastEnabled()
      {
         return false;
      }
      public static void SetMulticastDaemon(System.String param_port)
      {
      }
      public static System.String GetMulticastDaemon()
      {
         return null;
      }
      public static System.Boolean IsConsumerMulticast(TIBCO.EMS.MessageConsumer param_consumer)
      {
         return false;
      }
      public static void RecoverMsg(TIBCO.EMS.Message param_msg)
      {
      }
   }
   public class EMSMulticastExceptionEventArgs : System.EventArgs
   {
      protected EMSMulticastExceptionEventArgs()
      {
      }
      public TIBCO.EMS.EMSException Exception
      {
         get { return null; }
      }
      public TIBCO.EMS.Connection Connection
      {
         get { return null; }
      }
      public TIBCO.EMS.Session Session
      {
         get { return null; }
      }
      public TIBCO.EMS.MessageConsumer Consumer
      {
         get { return null; }
      }
   }
   public delegate void EMSMulticastExceptionHandler(System.Object param_sender, TIBCO.EMS.EMSMulticastExceptionEventArgs param_args);
   public class QueueSession : TIBCO.EMS.Session
   {
      protected QueueSession()
      {
      }
      public TIBCO.EMS.QueueReceiver CreateReceiver(TIBCO.EMS.Queue param_queue)
      {
         return null;
      }
      public TIBCO.EMS.QueueReceiver CreateReceiver(TIBCO.EMS.Queue param_queue, System.String param_messageSelector)
      {
         return null;
      }
      public TIBCO.EMS.QueueSender CreateSender(TIBCO.EMS.Queue param_queue)
      {
         return null;
      }
   }
   public class TopicRequestor
   {
      public TopicRequestor(TIBCO.EMS.TopicSession param_session, TIBCO.EMS.Topic param_topic)
      {
      }
      protected TopicRequestor()
      {
      }
      public TIBCO.EMS.Message Request(TIBCO.EMS.Message param_message)
      {
         return null;
      }
      public void Close()
      {
      }
   }
   public class IllegalStateException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public IllegalStateException(System.String param_reason, System.String param_errorCode)
      {
      }
      public IllegalStateException(System.String param_reason)
      {
      }
      protected IllegalStateException()
      {
      }
   }
   public class BytesMessage : TIBCO.EMS.Message, System.ICloneable
   {
      public BytesMessage(TIBCO.EMS.Session param_session)
      {
      }
      protected BytesMessage()
      {
      }
      public System.Int64 BodyLength
      {
         get { return 0; }
      }
      public override System.Object Clone()
      {
         return null;
      }
      public System.Boolean ReadBoolean()
      {
         return false;
      }
      public System.SByte ReadByte()
      {
         return 0;
      }
      public System.Byte ReadUnsignedByte()
      {
         return 0;
      }
      public System.Int16 ReadShort()
      {
         return 0;
      }
      public System.UInt16 ReadUnsignedShort()
      {
         return 0;
      }
      public System.Char ReadChar()
      {
         return '\0';
      }
      public System.Int32 ReadInt()
      {
         return 0;
      }
      public System.Int64 ReadLong()
      {
         return 0;
      }
      public System.Single ReadFloat()
      {
         return 0;
      }
      public System.Double ReadDouble()
      {
         return 0;
      }
      public System.String ReadUTF()
      {
         return null;
      }
      public System.Int32 ReadBytes(System.Byte[] param_value)
      {
         return 0;
      }
      public System.Int32 ReadBytes(System.Byte[] param_value, System.Int32 param_length)
      {
         return 0;
      }
      public void WriteBoolean(System.Boolean param_value)
      {
      }
      public void WriteByte(System.Byte param_value)
      {
      }
      public void WriteShort(System.Int16 param_value)
      {
      }
      public void WriteChar(System.Char param_value)
      {
      }
      public void WriteInt(System.Int32 param_value)
      {
      }
      public void WriteLong(System.Int64 param_value)
      {
      }
      public void WriteFloat(System.Single param_value)
      {
      }
      public void WriteDouble(System.Double param_value)
      {
      }
      public void WriteUTF(System.String param_value)
      {
      }
      public void WriteBytes(System.Byte[] param_value)
      {
      }
      public void WriteBytes(System.Byte[] param_value, System.Int32 param_offset, System.Int32 param_length)
      {
      }
      public void WriteObject(System.Object param_value)
      {
      }
      public void Reset()
      {
      }
      public override void ClearBody()
      {
      }
      public override System.String ToString()
      {
         return null;
      }
   }
   public class MessageEOFException : TIBCO.EMS.EMSException, System.Runtime.Serialization.ISerializable, System.Runtime.InteropServices._Exception
   {
      public MessageEOFException(System.String param_reason, System.String param_errorCode)
      {
      }
      public MessageEOFException(System.String param_reason)
      {
      }
      protected MessageEOFException()
      {
      }
   }
   public class QueueRequestor
   {
      public QueueRequestor(TIBCO.EMS.QueueSession param_session, TIBCO.EMS.Queue param_queue)
      {
      }
      protected QueueRequestor()
      {
      }
      public TIBCO.EMS.Message Request(TIBCO.EMS.Message param_message)
      {
         return null;
      }
      public void Close()
      {
      }
   }
   public class TopicConnection : TIBCO.EMS.Connection
   {
      protected TopicConnection()
      {
      }
      public virtual TIBCO.EMS.TopicSession CreateTopicSession(System.Boolean param_transacted, System.Int32 param_acknowledgeMode)
      {
         return null;
      }
      public virtual TIBCO.EMS.TopicSession CreateTopicSession(System.Boolean param_transacted, TIBCO.EMS.SessionMode param_acknowledgeMode)
      {
         return null;
      }
   }
   public class QueueReceiver : TIBCO.EMS.MessageConsumer
   {
      protected QueueReceiver()
      {
      }
      public TIBCO.EMS.Queue Queue
      {
         get { return null; }
      }
   }
}
